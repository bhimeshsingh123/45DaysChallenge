//brute forse Approch    TC O(n3)

class Solution {
    public int subarraysDivByK(int[] nums, int k) {
          int count=0;
        for(int i=0;i<nums.length;i++){
            int start =i;
            for(int j=i;j<nums.length;j++){
                int end =j;
                int sum=0;
                 for(int x=start;x<=end;x++){
                   sum+=nums[x];
                 }
                 if(sum%k==0){
                     count++;
                 }
          }
        }
        return count;
    }
}

//second optimize approch  

class Solution {
    public int subarraysDivByK(int[] nums, int k) {
          int count=0;
        for(int i=0;i<nums.length;i++){
            int sum = 0;
            for(int j=i;j<nums.length;j++){
                   sum+=nums[j];
                 if(sum%k==0){
                     count++;
                 }
          }
        }
        return count;
    }
}
